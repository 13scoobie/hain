'use strict';

var _ = require('lodash');
var co = require('co');
var twitter = require('twitter-text');

module.exports = function (context) {
  var shell = context.shell;
  var app = context.app;

  function search(query, res) {
    var query_trim = query.trim();
    if (query_trim.length <= 2) return;

    var urls = twitter.extractUrls(query_trim);
    if (urls.length === 0) return;

    var url = _.first(urls);
    var ratio = url.length / query_trim.length;
    if (ratio <= 0.9) return;

    res.add({
      id: url,
      title: url,
      desc: url,
      group: 'Links'
    });
  }

  function execute(id, payload) {
    var protocol_re = /https?:\/\//i;
    var url = id;
    if (protocol_re.test(url) === false) {
      url = 'http://' + url;
    }
    shell.openExternal(url);
    app.close();
  }

  return { search: search, execute: execute };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsdWdpbnMvaGFpbi1wbHVnaW4tdXJsL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU0sSUFBSSxRQUFRLFFBQVIsQ0FBSjtBQUNOLElBQU0sS0FBSyxRQUFRLElBQVIsQ0FBTDtBQUNOLElBQU0sVUFBVSxRQUFRLGNBQVIsQ0FBVjs7QUFFTixPQUFPLE9BQVAsR0FBaUIsVUFBQyxPQUFELEVBQWE7QUFDNUIsTUFBTSxRQUFRLFFBQVEsS0FBUixDQURjO0FBRTVCLE1BQU0sTUFBTSxRQUFRLEdBQVIsQ0FGZ0I7O0FBSTVCLFdBQVMsTUFBVCxDQUFnQixLQUFoQixFQUF1QixHQUF2QixFQUE0QjtBQUMxQixRQUFNLGFBQWEsTUFBTSxJQUFOLEVBQWIsQ0FEb0I7QUFFMUIsUUFBSSxXQUFXLE1BQVgsSUFBcUIsQ0FBckIsRUFDRixPQURGOztBQUdBLFFBQU0sT0FBTyxRQUFRLFdBQVIsQ0FBb0IsVUFBcEIsQ0FBUCxDQUxvQjtBQU0xQixRQUFJLEtBQUssTUFBTCxLQUFnQixDQUFoQixFQUNGLE9BREY7O0FBR0EsUUFBTSxNQUFNLEVBQUUsS0FBRixDQUFRLElBQVIsQ0FBTixDQVRvQjtBQVUxQixRQUFNLFFBQVEsSUFBSSxNQUFKLEdBQWEsV0FBVyxNQUFYLENBVkQ7QUFXMUIsUUFBSSxTQUFTLEdBQVQsRUFDRixPQURGOztBQUdBLFFBQUksR0FBSixDQUFRO0FBQ04sVUFBSSxHQUFKO0FBQ0EsYUFBTyxHQUFQO0FBQ0EsWUFBTSxHQUFOO0FBQ0EsYUFBTyxPQUFQO0tBSkYsRUFkMEI7R0FBNUI7O0FBc0JBLFdBQVMsT0FBVCxDQUFpQixFQUFqQixFQUFxQixPQUFyQixFQUE4QjtBQUM1QixRQUFNLGNBQWMsY0FBZCxDQURzQjtBQUU1QixRQUFJLE1BQU0sRUFBTixDQUZ3QjtBQUc1QixRQUFJLFlBQVksSUFBWixDQUFpQixHQUFqQixNQUEwQixLQUExQixFQUFpQztBQUNuQyx3QkFBZ0IsR0FBaEIsQ0FEbUM7S0FBckM7QUFHQSxVQUFNLFlBQU4sQ0FBbUIsR0FBbkIsRUFONEI7QUFPNUIsUUFBSSxLQUFKLEdBUDRCO0dBQTlCOztBQVVBLFNBQU8sRUFBRSxjQUFGLEVBQVUsZ0JBQVYsRUFBUCxDQXBDNEI7Q0FBYiIsImZpbGUiOiJwbHVnaW5zL2hhaW4tcGx1Z2luLXVybC9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbmNvbnN0IF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcclxuY29uc3QgY28gPSByZXF1aXJlKCdjbycpO1xyXG5jb25zdCB0d2l0dGVyID0gcmVxdWlyZSgndHdpdHRlci10ZXh0Jyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IChjb250ZXh0KSA9PiB7XHJcbiAgY29uc3Qgc2hlbGwgPSBjb250ZXh0LnNoZWxsO1xyXG4gIGNvbnN0IGFwcCA9IGNvbnRleHQuYXBwO1xyXG5cclxuICBmdW5jdGlvbiBzZWFyY2gocXVlcnksIHJlcykge1xyXG4gICAgY29uc3QgcXVlcnlfdHJpbSA9IHF1ZXJ5LnRyaW0oKTtcclxuICAgIGlmIChxdWVyeV90cmltLmxlbmd0aCA8PSAyKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgY29uc3QgdXJscyA9IHR3aXR0ZXIuZXh0cmFjdFVybHMocXVlcnlfdHJpbSk7XHJcbiAgICBpZiAodXJscy5sZW5ndGggPT09IDApXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBjb25zdCB1cmwgPSBfLmZpcnN0KHVybHMpO1xyXG4gICAgY29uc3QgcmF0aW8gPSB1cmwubGVuZ3RoIC8gcXVlcnlfdHJpbS5sZW5ndGg7XHJcbiAgICBpZiAocmF0aW8gPD0gMC45KVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgcmVzLmFkZCh7XHJcbiAgICAgIGlkOiB1cmwsXHJcbiAgICAgIHRpdGxlOiB1cmwsXHJcbiAgICAgIGRlc2M6IHVybCxcclxuICAgICAgZ3JvdXA6ICdMaW5rcydcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZXhlY3V0ZShpZCwgcGF5bG9hZCkge1xyXG4gICAgY29uc3QgcHJvdG9jb2xfcmUgPSAvaHR0cHM/OlxcL1xcLy9pO1xyXG4gICAgbGV0IHVybCA9IGlkO1xyXG4gICAgaWYgKHByb3RvY29sX3JlLnRlc3QodXJsKSA9PT0gZmFsc2UpIHtcclxuICAgICAgdXJsID0gYGh0dHA6Ly8ke3VybH1gO1xyXG4gICAgfVxyXG4gICAgc2hlbGwub3BlbkV4dGVybmFsKHVybCk7XHJcbiAgICBhcHAuY2xvc2UoKTtcclxuICB9XHJcblxyXG4gIHJldHVybiB7IHNlYXJjaCwgZXhlY3V0ZSB9O1xyXG59O1xyXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
